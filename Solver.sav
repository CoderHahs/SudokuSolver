import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import java.applet.Applet;

public class Solver extends Applet implements ActionListener
{
    Panel p_card;  //to hold all of the screens
    Panel card1, card2, card3, card4, card5; //the two screens
    CardLayout cdLayout = new CardLayout ();
    int row = 9;
    JButton board[] = new JButton [row * row];
    int userinput[] = new int [row * row];
    int cell;


    public void init ()
    {
	p_card = new Panel ();
	p_card.setLayout (cdLayout);
	screen1 ();
	screen2 ();
	//screen3 ();
	//screen4 ();
	//screen5 ();
	resize (500, 530);
	setLayout (new BorderLayout ());
	add ("Center", p_card);
    }


    public void screen1 ()
    { //screen 1 is set up.
	card1 = new Panel ();
	card1.setBackground (Color.white);
	JLabel title = new JLabel ("Sudoku Solver");
	JButton next = new JButton ("Next");
	next.setActionCommand ("s2");
	next.addActionListener (this);
	card1.add (title);
	card1.add (next);
	p_card.add ("1", card1);
    }


    public void screen2 ()
    { //screen 2 is set up.
	card2 = new Panel ();

	JLabel title = new JLabel ("Select the cells that correspond to your sudoku puzzle");
	title.setFont (new Font ("Arial", Font.PLAIN, 20));

	Panel gameboard = new Panel (new GridLayout (row, row));
	for (int i = 0 ; i < board.length ; i++)
	{
	    board [i] = new JButton (" ");
	    board [i].setBackground (Color.white);
	    board [i].setFont (new Font ("Arial", Font.PLAIN, 20));
	    board [i].setPreferredSize (new Dimension (50, 50));
	    board [i].addActionListener (this);
	    board [i].setActionCommand ("" + i);
	    gameboard.add (board [i]);
	}

	JButton next = new JButton ("Next");

	next.setActionCommand ("s3");
	next.addActionListener (this);
	card2.add (title);
	card2.add (gameboard);
	card2.add (next);
	p_card.add ("2", card2);
    }

/*
    public void screen3 ()
    { //screen 3 is set up.
	card3 = new Panel ();
	card3.setBackground (Color.green);
	JLabel title = new JLabel ("Icon.");
	JButton next = new JButton ("Next");
	next.setActionCommand ("s4");
	next.addActionListener (this);
	card3.add (title);
	card3.add (next);
	p_card.add ("3", card3);
    }


    public void screen4 ()
    { //screen 4 is set up.
	card4 = new Panel ();
	card4.setBackground (Color.yellow);
	JLabel title = new JLabel ("Icon who?");
	JButton next = new JButton ("Next");
	next.setActionCommand ("s5");
	next.addActionListener (this);
	card4.add (title);
	card4.add (next);
	p_card.add ("4", card4);
    }


    public void screen5 ()
    { //screen 5 is set up.
	card5 = new Panel ();
	card5.setBackground (Color.cyan);
	JLabel title = new JLabel ("Icon tell you another");
	JLabel title2 = new JLabel ("knock knock joke.");
	JLabel title3 = new JLabel ("Do you want me to?");
	JButton next = new JButton ("Yes");
	next.setActionCommand ("s1");
	next.addActionListener (this);
	card5.add (title);
	card5.add (title2);
	card5.add (title3);
	card5.add (next);
	p_card.add ("5", card5);
    }


    int n = 0;
    public void actionPerformed (ActionEvent e)
    { //moves between the screens

	if (n == 1)
	{
	    cell = Integer.parseInt (e.getActionCommand ());
	    for (int i = 0 ; i < board.length ; i++)
	    {
		if (e.getActionCommand ().equals ("" + i))
		    input ();
	    }
	}
	else if (e.getActionCommand ().equals ("s1"))
	    cdLayout.show (p_card, "1");
	else if (e.getActionCommand ().equals ("s2"))
	{
	    n = 1;
	    cdLayout.show (p_card, "2");
	}
	else if (e.getActionCommand ().equals ("s3"))
	    cdLayout.show (p_card, "3");
	else if (e.getActionCommand ().equals ("s4"))
	    cdLayout.show (p_card, "4");
	else if (e.getActionCommand ().equals ("s5"))
	    cdLayout.show (p_card, "5");
    }


    String numinput;
    boolean valid;
    public void input ()
    {
	numinput = JOptionPane.showInputDialog ("Please enter the number found at this location \nin your sudoku puzzle: ");
	valid = isValid (numinput);
	while (valid == false)
	{
	    numinput = JOptionPane.showInputDialog ("You must enter a number between 1 and 9.\nPlease enter the number found at this location \nin your sudoku puzzle: ");
	    valid = isValid (numinput);
	}
	board [cell].setText ("" + numinput);
	userinput [cell] = Integer.parseInt (numinput);

    }


    public boolean isValid (String input)
    {
	int num = Integer.parseInt (input);
	if (num <= 9)
	    return true;
	else
	    return false;
    }


    protected static ImageIcon createImageIcon (String path)
    {
	java.net.URL imgURL = Solver.class.getResource (path);
	if (imgURL != null)
	{
	    return new ImageIcon (imgURL);
	}
	else
	{
	    System.err.println ("Couldn't find file: " + path);
	    return null;
	}
    }
}
